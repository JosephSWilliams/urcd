urcd:
  af_unix relay chat daemon and
  af_unix relay chat daemon accessories...

depends:
  nacl, libtai, ucspi-tcp, python(>=2.6),
  daemontools, sh, gcc

recommends:
  python-dev(>=2.6), cython(>=0.18.0),
  nacl(curvecp support), nacltaia-otr

install:
  # untested enomem workaround for cython installs (thanks keiko)
  # echo '--param gcc-min-expand=0 --param gcc-min-heapsize=8192' > conf-cc

  ./install-libtai.sh
  ./install-nacl.sh

  useradd urcd

  # python2.6
  ./Make.sh

  # python2.7
  sed 's/\.6/.7/g' Make.sh | sh

  $editor env/addr
  $editor env/port
  $editor env/serv
  $editor env/motd

  ln -s `pwd` /service/urcd

  mkdir -p /service/urcd/socket/
  chown urcd /service/urcd/socket/
  echo -n '/service/urcd/socket/' > env/path

  sleep 4
  svstat /service/urcd

adding curvecp:
  mkdir -p /services/urcd-curvecp

  ln -s `pwd`/env /services/urcd-curvecp/env
  ln -s `pwd`/urcd /services/urcd-curvecp/urcd
  ln -s `pwd`/run.urcd-curvecp /services/urcd-curvecp/run

  curvecpmakekey /services/urcd-curvecp/curvecp

  find /services/urcd-curvecp/curvecp -type d -exec chmod 700 {} \;
  find /services/urcd-curvecp/curvecp -type f -exec chmod 600 {} \;
  chown urcd /services/urcd-curvecp/curvecp -R

  ln -s /services/urcd-curvecp /service/urcd-curvecp

  sleep 4
  svstat /service/urcd-curvecp

  echo "PUBKEY: `curvecpprintkey /services/urcd-curvecp/curvecp`"

  curvecp + irc client (test):

    tcpserver 127.0.0.1 6667 \
      curvecpclient irc.d3v11.ano `curvecpprintkey /services/urcd-curvecp/curvecp` \
      `cat env/addr` `cat env/port` 01110101011100100110001101100100 \
      curvecpmessage -c ./ucspi-stream &

    irssi -c 127.0.0.1

interface:
  place an executable program in the cwd
  of urcd named 'stdin'. the program reads
  stdin from the irc client. anything your
  program writes to stdout will be written
  to urcd

  place an executable program in the cwd
  of urcd named 'stdout'. the program reads 
  stdin from urcd. anything your program 
  writes to stdout will be written to the
  irc client

  for urc2sd follow the same process. happy
  hacking.

no censorship:
  urc network is a censorship resistant network.
  i recommend nacltaia-otr, or if you prefer other
  OTR softwares, to ignore spam or trolls.

  irssi ("ban/except"):
    /ignore *!*@* ALL
    /ignore -except friend!*@* ALL

  xchat ("ban/except"):
    /ignore *!*@* ALL
    /ignore friend!*@* ALL UNIGNORE

server2server:
  ./bin/add-tcprecv your.urcd.ano 1234 /service/urcd/socket/

  # your peers can link their server using:
  ./bin/add-tcpsend your.urcd.ano 1234 /service/urcd/socket/

  # you will need to link to your peer's server:
  ./bin/add-tcpsend peer.urcd.ano 4321 /service/urcd/socket/

  # transit nodes may use ./add-tcplisten and clients can
  # stream with ./add-tcpconnect

server2server (tor):
  ./bin/add-tcprecv your.urcd.ano 1234 /service/urcd/socket/

  # your peers can link their server using:
  ./bin/add-torsend your.urcd.ano 1234 /service/urcd/socket/

  # you will need to link to your peer's server:
  ./bin/add-torsend peer.urcd.ano 4321 /service/urcd/socket/

  # transit nodes may use ./add-tcplisten and clients can
  # stream with ./add-torconnect

server2server (curvecp):
  ./bin/add-curvecprecv your.urcd.ano 1234 /service/urcd/socket/

  # your peers can link their server using:
  ./bin/add-curvecpsend your.urcd.ano 1234 /service/urcd/socket/ your.urcd.ano $your_pubkey

  # you will need to link to your peer's server:
  ./bin/add-curvecpsend peer.urcd.ano 4321 /service/urcd/socket/ peer.urcd.ano $peer_pubkey

  # transit nodes may use ./add-curvecplisten and clients can
  # stream with ./add-curvecpconnect

hub2hub:
  ./bin/add-urchub

  # using urcstream with urcd/urc2sd
  ./bin/add-urcstream2hub /service/urcd/socket/ /service/urcd-hub0/socket/

  # using urchub with urcd/urc2sd
  echo /services/urcd-hub0/socket/ > env/URCHUB

  ./bin/add-hublisten your.urcd.ano 1234 /service/urcd-hub0/socket/
  ./bin/add-hubconnect peer.urcd.ano 4321 /service/urcd-hub0/socket/

urc2sd:
  mkdir -p /services/urc2sd

  ln -s `pwd`/urc2sd /services/urc2sd/urc2sd
  ln -s `pwd`/ucspi-client2server /services/urc2sd/ucspi-client2server
  ln -s `pwd`/run.urc2sd /services/urc2sd/run

  printf $addr > /services/urc2sd/addr
  printf $port > /services/urc2sd/port
  printf '/path/to/socket/' > /services/urc2sd/path
  printf 'urcd' > /services/urc2sd/nick
  printf '#channel' > /services/urc2sd/channels

  touch /services/urc2sd/auto_cmd

  ln -s /services/urc2sd /service/urc2sd
